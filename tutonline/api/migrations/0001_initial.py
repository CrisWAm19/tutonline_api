# Generated by Django 4.2.1 on 2023-06-01 19:13

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipoDeUsuario', models.CharField(choices=[('Estudiante', 'Estudiante'), ('Tutor', 'Tutor')], default='Estudiante', max_length=10, verbose_name='Tipo de usuario')),
                ('rut', models.CharField(max_length=12, unique=True, verbose_name='Rut')),
                ('fechaNacimiento', models.DateField(default=datetime.date.today, verbose_name='Fecha de nacimiento')),
                ('numeroTelefono', models.IntegerField(default=0)),
                ('region', models.CharField(default='', max_length=30, verbose_name='Region')),
                ('comuna', models.CharField(default='', max_length=30, verbose_name='Comuna')),
                ('fotoPerfil', models.ImageField(default='../img/usuarios.png', null=True, upload_to='', verbose_name='Foto de perfil')),
                ('saldo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreAsignatura', models.CharField(max_length=30, verbose_name='Nombre de la asignatura')),
                ('descripcionAsignatura', models.CharField(max_length=500, verbose_name='Descripcion de la asignatura')),
            ],
            options={
                'verbose_name': 'Asignatura',
                'verbose_name_plural': 'Asignaturas',
                'db_table': 'Asignatura',
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreCarrera', models.CharField(max_length=40, verbose_name='Nombre de la carrera')),
            ],
            options={
                'verbose_name': 'Carrera',
                'verbose_name_plural': 'Carreras',
                'db_table': 'Carrera',
            },
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la clase')),
                ('hora', models.TimeField(verbose_name='Hora de la clase')),
                ('modalidad', models.CharField(max_length=10, verbose_name='Modadlidad de la clase')),
                ('tarifa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('idAsignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.asignatura')),
                ('idProfesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clase',
                'verbose_name_plural': 'Clases',
                'db_table': 'Clase',
            },
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estadoSolicitud', models.CharField(choices=[('Rechazada', 'Rechazada'), ('Aceptada', 'Aceptada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=9, verbose_name='Estado de la solicitud')),
                ('idClase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.clase')),
                ('idEstudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiante_solicitante', to=settings.AUTH_USER_MODEL)),
                ('idProfesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profesor_solicitado', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud',
                'verbose_name_plural': 'Solicitudes',
                'db_table': 'Solicitud',
            },
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=30, verbose_name='Titulo de la publicacion')),
                ('descripcionPublicacion', models.CharField(max_length=100, verbose_name='Descripcion de la publicacion')),
                ('fecha', models.DateField(auto_now_add=True, verbose_name='Fecha de la publicacion')),
                ('hora', models.TimeField(auto_now_add=True, verbose_name='Hora de la publicacion')),
                ('idAsignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.asignatura')),
                ('idEstudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Publicacion',
                'verbose_name_plural': 'Publicaciones',
                'db_table': 'Publicacion',
            },
        ),
        migrations.CreateModel(
            name='Profesion',
            fields=[
                ('codigoVerificador', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='Codigo verificador')),
                ('institucion', models.CharField(max_length=30, verbose_name='Institucion')),
                ('profesion', models.CharField(max_length=30, verbose_name='Profesion')),
                ('anioEgreso', models.DateField(verbose_name='Anio de egreso')),
                ('tituloValidado', models.CharField(choices=[('No', 'No'), ('Si', 'Si'), ('En proceso', 'En proceso')], default='En proceso', max_length=10, null=True, verbose_name='Titulo validado')),
                ('idProfesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesion',
                'verbose_name_plural': 'Profesiones',
                'db_table': 'Profesion',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=100, verbose_name='Descripcion')),
                ('idEstudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificacion',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'Notificacion',
            },
        ),
        migrations.CreateModel(
            name='Descripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcionTutor', models.CharField(max_length=100, verbose_name='Descripicion del tutor')),
                ('idProfesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Descripcion',
                'verbose_name_plural': 'Descripciones',
                'db_table': 'Descripcion',
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.CharField(max_length=50, verbose_name='Comentario')),
                ('valoracion', models.IntegerField(default=1, verbose_name='Valoracion')),
                ('fecha', models.DateField(auto_now_add=True, verbose_name='Fecha del comentario')),
                ('idEstudianteEmisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_enviados', to=settings.AUTH_USER_MODEL)),
                ('idProfesorReceptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_recibidos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'db_table': 'Comentario',
            },
        ),
        migrations.CreateModel(
            name='ClaseAgendada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idClase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.clase')),
                ('idEstudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiante_agendado', to=settings.AUTH_USER_MODEL)),
                ('idProfesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profesor_agendador', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clase Agendada',
                'verbose_name_plural': 'Clases Agendadas',
                'db_table': 'ClaseAgendada',
            },
        ),
        migrations.AddField(
            model_name='asignatura',
            name='idCarrera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.carrera'),
        ),
    ]
